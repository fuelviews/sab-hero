name: Dependabot Auto-merge

on:
  workflow_dispatch:

  pull_request:
    branches:
      - main
    types:
      - opened
      - reopened
      - synchronize
      - edited

permissions:
  pull-requests: write
  contents: write

jobs:
  dependabot:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: ${{ github.actor == 'dependabot[bot]' || github.actor == 'dependabot' }}

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v2.2.0
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"

      - name: Wait for status checks to pass
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = await github.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });

            // Wait until all status checks pass
            let checks = await github.checks.listForRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: pr.data.head.sha,
            });

            while (checks.data.check_runs.some(check => check.status !== 'completed')) {
              console.log('Waiting for checks to complete...');
              await new Promise(resolve => setTimeout(resolve, 10000)); // Wait 10 seconds before re-checking
              checks = await github.checks.listForRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: pr.data.head.sha,
              });
            }

            const failedChecks = checks.data.check_runs.filter(check => check.conclusion === 'failure');
            if (failedChecks.length > 0) {
              throw new Error(`Some checks failed: ${failedChecks.map(check => check.name).join(', ')}`);
            }

      - name: Auto-merge Dependabot PRs for semver-minor updates
        if: ${{ steps.metadata.outputs.update-type == 'version-update:semver-minor' }}
        run: gh pr merge --auto --squash "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Auto-merge Dependabot PRs for semver-patch updates
        if: ${{ steps.metadata.outputs.update-type == 'version-update:semver-patch' }}
        run: gh pr merge --auto --rebase "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
